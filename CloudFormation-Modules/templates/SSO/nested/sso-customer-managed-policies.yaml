AWSTemplateFormatVersion: 2010-09-09
Description: "CloudFormation Template to Customer Managed IAM Policies to be used with SSO Permission Sets"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Properties
        Parameters:
          - pGLCTSolutionVersion
Parameters:
  pGLCTSolutionVersion:
    Description: The Global Logic solution version. Used to trigger updates on the nested StackSets.
    Type: String
Resources:
  # Customer Managed IAM Policies
  rIamPolicyBillingAdmins:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "Custom-Billing-Admins"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ec2:AcceptReservedInstancesExchangeQuote"
              - "ec2:CancelReservedInstancesListing"
              - "ec2:CreateReservedInstancesListing"
              - "ec2:DescribeHostReservations"
              - "ec2:DescribeReservedInstancesOfferings"
              - "ec2:DescribeHostReservationOfferings"
              - "ec2:DescribeReservedInstancesModifications"
              - "ec2:DescribeReservedInstances"
              - "ec2:DescribeReservedInstancesListings"
              - "ec2:GetHostReservationPurchasePreview"
              - "ec2:GetReservedInstancesExchangeQuote"
              - "ec2:ModifyReservedInstances"
              - "ec2:PurchaseReservedInstancesOffering"
              - "ec2:PurchaseHostReservation"
              - "rds:DescribeReservedDBInstances"
              - "rds:DescribeReservedDBInstancesOfferings"
              - "rds:PurchaseReservedDBInstancesOffering"
            Resource: "*"
  rIamPolicyDelegatedAdmins:
    Type: AWS::IAM::ManagedPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F40
            reason: "To be refined"
          - id: F5
            reason: "To be refined"
    Properties:
      ManagedPolicyName: "Custom-Delegated-Admins"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "*"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "ec2:AcceptTransitGateway*"
              - "ec2:AssociateDhcpOptions"
              - "ec2:AssociateRouteTable"
              - "ec2:AssociateSubnetCidrBlock"
              - "ec2:AssociateVpcCidrBlock"
              - "ec2:AttachClassicLinkVpc"
              - "ec2:AttachInternetGateway"
              - "ec2:AttachVpnGateway"
              - "ec2:CreateCustomerGateway"
              - "ec2:CreateDefaultSubnet"
              - "ec2:CreateDefaultVpc"
              - "ec2:CreateDhcpOptions"
              - "ec2:CreateInternetGateway"
              - "ec2:CreateNatGateway"
              - "ec2:CreateNetworkAcl"
              - "ec2:CreateNetworkAclEntry"
              - "ec2:CreateRoute"
              - "ec2:CreateRouteTable"
              - "ec2:CreateSubnet"
              - "ec2:CreateTransitGateway*"
              - "ec2:CreateVpc"
              - "ec2:CreateVpnConnection"
              - "ec2:CreateVpnConnectionRoute"
              - "ec2:CreateVpnGateway"
              - "ec2:DeleteCustomerGateway"
              - "ec2:DeleteDhcpOptions"
              - "ec2:DeleteFlowLogs"
              - "ec2:DeleteInternetGateway"
              - "ec2:DeleteNatGateway"
              - "ec2:DeleteNetworkAcl"
              - "ec2:DeleteNetworkAclEntry"
              - "ec2:DeleteRoute"
              - "ec2:DeleteRouteTable"
              - "ec2:DeleteSubnet"
              - "ec2:DeleteTransitGateway*"
              - "ec2:DeleteVpc"
              - "ec2:DeleteVpnConnection"
              - "ec2:DeleteVpnConnectionRoute"
              - "ec2:DeleteVpnGateway"
              - "ec2:DetachClassicLinkVpc"
              - "ec2:DetachInternetGateway"
              - "ec2:DetachVpnGateway"
              - "ec2:DisableVgwRoutePropagation"
              - "ec2:DisableVpcClassicLink"
              - "ec2:DisassociateRouteTable"
              - "ec2:EnableVgwRoutePropagation"
              - "ec2:EnableVpcClassicLink"
              - "ec2:ModifySubnetAttribute"
              - "ec2:ModifyVpcAttribute"
              - "ec2:ReplaceNetworkAclAssociation"
              - "ec2:ReplaceNetworkAclEntry"
              - "ec2:ReplaceRoute"
              - "ec2:ReplaceRouteTableAssociation"
              - "ec2:AuthorizeSecurityGroupEgress"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:CreateSecurityGroup"
              - "ec2:DeleteSecurityGroup"
              - "ec2:RevokeSecurityGroupEgress"
              - "ec2:RevokeSecurityGroupIngress"
              - "ec2:UpdateSecurityGroupRuleDescriptionsEgress"
              - "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:DisableDomainAutoRenew"
              - "route53domains:DisableDomainTransferLock"
              - "route53domains:RegisterDomain"
              - "route53domains:RenewDomain"
              - "route53domains:RetrieveDomainAuthCode"
              - "route53domains:TransferDomain"
              - "route53domains:UpdateDomainContact"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:EnableDomainTransferLock"
              - "payments:*"
              - "tax:*"
              - "organizations:AcceptHandshake"
              - "organizations:AttachPolicy"
              - "organizations:CancelHandshake"
              - "organizations:CreateAccount"
              - "organizations:CreateOrganization"
              - "organizations:CreateOrganizationalUnit"
              - "organizations:CreatePolicy"
              - "organizations:DeclineHandshake"
              - "organizations:DeleteOrganization"
              - "organizations:DeleteOrganizationalUnit"
              - "organizations:DeletePolicy"
              - "organizations:DetachPolicy"
              - "organizations:DisableAWSServiceAccess"
              - "organizations:DisablePolicyType"
              - "organizations:EnableAllFeatures"
              - "organizations:EnableAWSServiceAccess"
              - "organizations:EnablePolicyType"
              - "organizations:InviteAccountToOrganization"
              - "organizations:LeaveOrganization"
              - "organizations:MoveAccount"
              - "organizations:RemoveAccountFromOrganization"
              - "organizations:UpdateOrganizationalUnit"
              - "organizations:UpdatePolicy"
              - "iam:UpdateAccountPasswordPolicy"
              - "iam:CreateLoginProfile"
              - "iam:ChangePassword"
              - "account:CloseAccount"
              - "account:DeleteAlternateContact"
              - "account:PutAlternateContact"
              - "account:PutChallengeQuestions"
              - "account:PutContactInformation"
              - "billing:PutContractInformation"
              - "billing:UpdateIAMAccessPreference"
              - "billing:UpdatePaymentPreferences"
              - "billing:UpdateBillingPreferences"
              - "purchase-orders:AddPurchaseOrder"
              - "purchase-orders:DeletePurchaseOrder"
              - "purchase-orders:UpdatePurchaseOrder"
              - "purchase-orders:UpdatePurchaseOrderStatus"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "iam:AttachGroupPolicy"
              - "iam:AttachRolePolicy"
              - "iam:AttachUserPolicy"
            Condition:
              ArnEquals:
                iam:PolicyARN:
                  - "arn:aws:iam::aws:policy/AdministratorAccess"
                  - "arn:aws:iam::aws:policy/AWSDirectConnectFullAccess"
                  - "arn:aws:iam::aws:policy/AmazonVPCFullAccess"
                  - "arn:aws:iam::aws:policy/IAMFullAccess"
                  - "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess"
                  - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
            Resource: "*"
  rIamPolicyDevOpsAdmins:
    Type: AWS::IAM::ManagedPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F40
            reason: "To be refined"
          - id: F5
            reason: "To be refined"
    Properties:
      ManagedPolicyName: "Custom-DevOps-Admins"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "*"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "ec2:AcceptTransitGateway*"
              - "ec2:AssociateRouteTable"
              - "ec2:AssociateSubnetCidrBlock"
              - "ec2:AssociateVpcCidrBlock"
              - "ec2:AttachClassicLinkVpc"
              - "ec2:AttachInternetGateway"
              - "ec2:AttachVpnGateway"
              - "ec2:CreateDefaultSubnet"
              - "ec2:CreateDefaultVpc"
              - "ec2:CreateInternetGateway"
              - "ec2:CreateNatGateway"
              - "ec2:CreateRouteTable"
              - "ec2:CreateSubnet"
              - "ec2:CreateTransitGateway*"
              - "ec2:CreateVpc"
              - "ec2:DeleteFlowLogs"
              - "ec2:DeleteInternetGateway"
              - "ec2:DeleteNatGateway"
              - "ec2:DeleteNetworkAcl"
              - "ec2:DeleteRouteTable"
              - "ec2:DeleteSubnet"
              - "ec2:DeleteTransitGateway*"
              - "ec2:DeleteVpc"
              - "ec2:DeleteVpnConnection"
              - "ec2:DeleteVpnGateway"
              - "ec2:DetachClassicLinkVpc"
              - "ec2:DetachInternetGateway"
              - "ec2:DetachVpnGateway"
              - "ec2:DisableVgwRoutePropagation"
              - "ec2:DisableVpcClassicLink"
              - "ec2:DisassociateRouteTable"
              - "ec2:EnableVgwRoutePropagation"
              - "ec2:EnableVpcClassicLink"
              - "ec2:ModifySubnetAttribute"
              - "ec2:ModifyVpcAttribute"
              - "ec2:ReplaceRouteTableAssociation"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:DisableDomainAutoRenew"
              - "route53domains:DisableDomainTransferLock"
              - "route53domains:RegisterDomain"
              - "route53domains:RenewDomain"
              - "route53domains:RetrieveDomainAuthCode"
              - "route53domains:TransferDomain"
              - "route53domains:UpdateDomainContact"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:EnableDomainTransferLock"
              - "payments:*"
              - "tax:*"
              - "organizations:AcceptHandshake"
              - "organizations:CancelHandshake"
              - "organizations:CreateAccount"
              - "organizations:CreateOrganization"
              - "organizations:CreateOrganizationalUnit"
              - "organizations:DeclineHandshake"
              - "organizations:DeleteOrganization"
              - "organizations:DeleteOrganizationalUnit"
              - "organizations:DeletePolicy"
              - "organizations:DetachPolicy"
              - "organizations:DisableAWSServiceAccess"
              - "organizations:DisablePolicyType"
              - "organizations:EnableAllFeatures"
              - "organizations:EnableAWSServiceAccess"
              - "organizations:EnablePolicyType"
              - "organizations:InviteAccountToOrganization"
              - "organizations:LeaveOrganization"
              - "organizations:MoveAccount"
              - "organizations:RemoveAccountFromOrganization"
              - "organizations:UpdateOrganizationalUnit"
              - "iam:UpdateAccountPasswordPolicy"
              - "iam:CreateLoginProfile"
              - "iam:ChangePassword"
              - "account:CloseAccount"
              - "account:DeleteAlternateContact"
              - "account:PutAlternateContact"
              - "account:PutChallengeQuestions"
              - "account:PutContactInformation"
              - "billing:PutContractInformation"
              - "billing:UpdateIAMAccessPreference"
              - "billing:UpdatePaymentPreferences"
              - "billing:UpdateBillingPreferences"
              - "purchase-orders:AddPurchaseOrder"
              - "purchase-orders:DeletePurchaseOrder"
              - "purchase-orders:UpdatePurchaseOrder"
              - "purchase-orders:UpdatePurchaseOrderStatus"
              - "support:Add*"
              - "support:Create*"
              - "support:Initiate*"
              - "support:Put*"
              - "support:ResolveCase"
              - "support:RateCaseCommunication"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "iam:AttachGroupPolicy"
              - "iam:AttachRolePolicy"
              - "iam:AttachUserPolicy"
            Condition:
              ArnEquals:
                iam:PolicyARN:
                  - "arn:aws:iam::aws:policy/AdministratorAccess"
                  - "arn:aws:iam::aws:policy/AWSDirectConnectFullAccess"
                  - "arn:aws:iam::aws:policy/AmazonVPCFullAccess"
                  - "arn:aws:iam::aws:policy/IAMFullAccess"
                  - "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess"
                  - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
            Resource: "*"
  rIamPolicyCustomDeveloper:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "Custom-Developer"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Deny"
            Action:
              - "ec2:AcceptTransitGateway*"
              - "ec2:AssociateRouteTable"
              - "ec2:AssociateSubnetCidrBlock"
              - "ec2:AssociateVpcCidrBlock"
              - "ec2:AttachClassicLinkVpc"
              - "ec2:AttachInternetGateway"
              - "ec2:AttachVpnGateway"
              - "ec2:CreateDefaultSubnet"
              - "ec2:CreateDefaultVpc"
              - "ec2:CreateInternetGateway"
              - "ec2:CreateNatGateway"
              - "ec2:CreateRouteTable"
              - "ec2:CreateSubnet"
              - "ec2:CreateTransitGateway*"
              - "ec2:CreateVpc"
              - "ec2:DeleteFlowLogs"
              - "ec2:DeleteInternetGateway"
              - "ec2:DeleteNatGateway"
              - "ec2:DeleteNetworkAcl"
              - "ec2:DeleteRouteTable"
              - "ec2:DeleteSubnet"
              - "ec2:DeleteTransitGateway*"
              - "ec2:DeleteVpc"
              - "ec2:DeleteVpnConnection"
              - "ec2:DeleteVpnGateway"
              - "ec2:DetachClassicLinkVpc"
              - "ec2:DetachInternetGateway"
              - "ec2:DetachVpnGateway"
              - "ec2:DisableVgwRoutePropagation"
              - "ec2:DisableVpcClassicLink"
              - "ec2:DisassociateRouteTable"
              - "ec2:EnableVgwRoutePropagation"
              - "ec2:EnableVpcClassicLink"
              - "ec2:ModifySubnetAttribute"
              - "ec2:ModifyVpcAttribute"
              - "ec2:ReplaceRouteTableAssociation"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:DisableDomainAutoRenew"
              - "route53domains:DisableDomainTransferLock"
              - "route53domains:RegisterDomain"
              - "route53domains:RenewDomain"
              - "route53domains:RetrieveDomainAuthCode"
              - "route53domains:TransferDomain"
              - "route53domains:UpdateDomainContact"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:EnableDomainTransferLock"
              - "payments:*"
              - "tax:*"
              - "organizations:AcceptHandshake"
              - "organizations:CancelHandshake"
              - "organizations:CreateAccount"
              - "organizations:CreateOrganization"
              - "organizations:CreateOrganizationalUnit"
              - "organizations:DeclineHandshake"
              - "organizations:DeleteOrganization"
              - "organizations:DeleteOrganizationalUnit"
              - "organizations:DeletePolicy"
              - "organizations:DetachPolicy"
              - "organizations:DisableAWSServiceAccess"
              - "organizations:DisablePolicyType"
              - "organizations:EnableAllFeatures"
              - "organizations:EnableAWSServiceAccess"
              - "organizations:EnablePolicyType"
              - "organizations:InviteAccountToOrganization"
              - "organizations:LeaveOrganization"
              - "organizations:MoveAccount"
              - "organizations:RemoveAccountFromOrganization"
              - "organizations:UpdateOrganizationalUnit"
              - "iam:UpdateAccountPasswordPolicy"
              - "iam:CreateLoginProfile"
              - "iam:ChangePassword"
              - "account:CloseAccount"
              - "account:DeleteAlternateContact"
              - "account:PutAlternateContact"
              - "account:PutChallengeQuestions"
              - "account:PutContactInformation"
              - "billing:*"
              - "purchase-orders:*"
              - "support:*"
            Resource: "*"
  rIamPolicyCustomDeveloperLimited:
    Type: AWS::IAM::ManagedPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F40
            reason: "To be refined"
          - id: F5
            reason: "To be refined"
    Properties:
      ManagedPolicyName: "Custom-Developer-Limited"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "apigateway:DELETE"
              - "apigateway:PATCH"
              - "apigateway:POST"
              - "apigateway:PUT"
              - "cloudformation:*"
              - "cloudfront:CreateInvalidation"
              - "cloudfront:UpdateDistribution"
              - "cloudshell:*"
              - "cloudwatch:*"
              - "ec2:*"
              - "es:*"
              - "events:*"
              - "firehose:*"
              - "iam:DeleteRole"
              - "iam:DeleteRolePolicy"
              - "iam:DetachRolePolicy"
              - "kinesis:*"
              - "kinesisanalytics:*"
              - "lambda:DeleteAlias"
              - "lambda:DeleteEventSourceMapping"
              - "lambda:DeleteFunction"
              - "lambda:InvokeFunction"
              - "lambda:RemovePermission"
              - "lambda:TagResource"
              - "lambda:UntagResource"
              - "lambda:UpdateEventSourceMapping"
              - "lambda:UpdateFunctionConfiguration"
              - "lambda:Get*"
              - "lambda:List*"
              - "logs:DeleteLogGroup"
              - "route53:*"
              - "s3:*"
              - "ssm:*"
              - "ssmmessages:CreateControlChannel"
              - "ssmmessages:CreateDataChannel"
              - "ssmmessages:OpenControlChannel"
              - "ssmmessages:OpenDataChannel"
              - "secretsmanager:GetResourcePolicy"
              - "secretsmanager:GetSecretValue"
              - "secretsmanager:DescribeSecret"
              - "secretsmanager:ListSecretVersionIds"
              - "secretsmanager:ListSecrets"
              - "states:*"
              - "synthetics:*"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "ec2:AssociateIamInstanceProfile"
              - "ec2:DisassociateIamInstanceProfile"
              - "ec2:ReplaceIamInstanceProfileAssociation"
              - "s3:CreateJob"
              - "s3:GetAccessPoint"
              - "s3:GetAccountPublicAccessBlock"
              - "s3:ListAccessPoints"
              - "s3:ListAccessPointsForObjectLambda"
              - "s3:ListJobs"
              - "s3:ListStorageLensConfigurations"
              - "s3:PutAccountPublicAccessBlock"
              - "s3:PutStorageLensConfiguration"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "ec2:AcceptTransitGateway*"
              - "ec2:AssociateDhcpOptions"
              - "ec2:AssociateRouteTable"
              - "ec2:AssociateSubnetCidrBlock"
              - "ec2:AssociateVpcCidrBlock"
              - "ec2:AttachClassicLinkVpc"
              - "ec2:AttachInternetGateway"
              - "ec2:AttachVpnGateway"
              - "ec2:CreateCustomerGateway"
              - "ec2:CreateDefaultSubnet"
              - "ec2:CreateDefaultVpc"
              - "ec2:CreateDhcpOptions"
              - "ec2:CreateInternetGateway"
              - "ec2:CreateNatGateway"
              - "ec2:CreateNetworkAcl"
              - "ec2:CreateNetworkAclEntry"
              - "ec2:CreateRoute"
              - "ec2:CreateRouteTable"
              - "ec2:CreateSubnet"
              - "ec2:CreateTransitGateway*"
              - "ec2:CreateVpc"
              - "ec2:CreateVpnConnection"
              - "ec2:CreateVpnConnectionRoute"
              - "ec2:CreateVpnGateway"
              - "ec2:DeleteCustomerGateway"
              - "ec2:DeleteDhcpOptions"
              - "ec2:DeleteFlowLogs"
              - "ec2:DeleteInternetGateway"
              - "ec2:DeleteNatGateway"
              - "ec2:DeleteNetworkAcl"
              - "ec2:DeleteNetworkAclEntry"
              - "ec2:DeleteRoute"
              - "ec2:DeleteRouteTable"
              - "ec2:DeleteSubnet"
              - "ec2:DeleteTransitGateway*"
              - "ec2:DeleteVpc"
              - "ec2:DeleteVpnConnection"
              - "ec2:DeleteVpnConnectionRoute"
              - "ec2:DeleteVpnGateway"
              - "ec2:DetachClassicLinkVpc"
              - "ec2:DetachInternetGateway"
              - "ec2:DetachVpnGateway"
              - "ec2:DisableVgwRoutePropagation"
              - "ec2:DisableVpcClassicLink"
              - "ec2:DisassociateRouteTable"
              - "ec2:EnableVgwRoutePropagation"
              - "ec2:EnableVpcClassicLink"
              - "ec2:ModifySubnetAttribute"
              - "ec2:ModifyVpcAttribute"
              - "ec2:ReplaceNetworkAclAssociation"
              - "ec2:ReplaceNetworkAclEntry"
              - "ec2:ReplaceRoute"
              - "ec2:ReplaceRouteTableAssociation"
              - "ec2:AuthorizeSecurityGroupEgress"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:CreateSecurityGroup"
              - "ec2:DeleteSecurityGroup"
              - "ec2:RevokeSecurityGroupEgress"
              - "ec2:RevokeSecurityGroupIngress"
              - "ec2:UpdateSecurityGroupRuleDescriptionsEgress"
              - "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:DisableDomainAutoRenew"
              - "route53domains:DisableDomainTransferLock"
              - "route53domains:RegisterDomain"
              - "route53domains:RenewDomain"
              - "route53domains:RetrieveDomainAuthCode"
              - "route53domains:TransferDomain"
              - "route53domains:UpdateDomainContact"
              - "route53domains:EnableDomainAutoRenew"
              - "route53domains:EnableDomainTransferLock"
              - "payments:*"
              - "tax:*"
              - "organizations:AcceptHandshake"
              - "organizations:AttachPolicy"
              - "organizations:CancelHandshake"
              - "organizations:CreateAccount"
              - "organizations:CreateOrganization"
              - "organizations:CreateOrganizationalUnit"
              - "organizations:CreatePolicy"
              - "organizations:DeclineHandshake"
              - "organizations:DeleteOrganization"
              - "organizations:DeleteOrganizationalUnit"
              - "organizations:DeletePolicy"
              - "organizations:DetachPolicy"
              - "organizations:DisableAWSServiceAccess"
              - "organizations:DisablePolicyType"
              - "organizations:EnableAllFeatures"
              - "organizations:EnableAWSServiceAccess"
              - "organizations:EnablePolicyType"
              - "organizations:InviteAccountToOrganization"
              - "organizations:LeaveOrganization"
              - "organizations:MoveAccount"
              - "organizations:RemoveAccountFromOrganization"
              - "organizations:UpdateOrganizationalUnit"
              - "organizations:UpdatePolicy"
              - "iam:Create*"
              - "iam:Delete*"
              - "iam:Update*"
              - "iam:Attach*"
              - "iam:Detach*"
              - "iam:Put*"
              - "iam:DeactivateMFADevice"
              - "iam:RemoveRoleFromInstanceProfile"
              - "iam:SetSTSRegionalEndpointStatus"
              - "iam:AddRoleToInstanceProfile"
              - "iam:SetSecurityTokenServicePreferences"
              - "iam:UploadSSHPublicKey"
              - "iam:ChangePassword"
              - "iam:RemoveClientIDFromOpenIDConnectProvider"
              - "iam:UploadCloudFrontPublicKey"
              - "iam:ResetServiceSpecificCredential"
              - "iam:PassRole"
              - "iam:AddUserToGroup"
              - "iam:RemoveUserFromGroup"
              - "iam:EnableMFADevice"
              - "iam:ResyncMFADevice"
              - "iam:UploadSigningCertificate"
              - "iam:UploadServerCertificate"
              - "iam:AddClientIDToOpenIDConnectProvider"
              - "iam:SetDefaultPolicyVersion"
              - "account:CloseAccount"
              - "account:DeleteAlternateContact"
              - "account:PutAlternateContact"
              - "account:PutChallengeQuestions"
              - "account:PutContactInformation"
              - "billing:*"
              - "purchase-orders:*"
              - "support:*"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "iam:AttachGroupPolicy"
              - "iam:AttachRolePolicy"
              - "iam:AttachUserPolicy"
            Condition:
              ArnEquals:
                iam:PolicyARN:
                  - "arn:aws:iam::aws:policy/AdministratorAccess"
                  - "arn:aws:iam::aws:policy/AWSDirectConnectFullAccess"
                  - "arn:aws:iam::aws:policy/AmazonVPCFullAccess"
                  - "arn:aws:iam::aws:policy/IAMFullAccess"
                  - "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess"
                  - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
            Resource: "*"
          - Effect: "Deny"
            Action:
              - "events:TagResource"
              - "events:DeleteRule"
              - "events:PutRule"
              - "events:DisableRule"
            Resource: "*"
Outputs:
  BillingAdminsIamPolicyName:
    Value: !Select [1, !Split ["/", !Ref rIamPolicyBillingAdmins]]
    Export:
      Name: StackSet-sso-customer-managed-policies-BillingAdminsIamPolicyName
  DelegatedAdminsIamPolicyName:
    Value: !Select [1, !Split ["/", !Ref rIamPolicyDelegatedAdmins]]
    Export:
      Name: StackSet-sso-customer-managed-policies-DelegatedAdminsIamPolicyName
  DevOpsAdminsIamPolicyName:
    Value: !Select [1, !Split ["/", !Ref rIamPolicyDevOpsAdmins]]
    Export:
      Name: StackSet-sso-customer-managed-policies-DevOpsAdminsIamPolicyName
  CustomDeveloperIamPolicyName:
    Value: !Select [1, !Split ["/", !Ref rIamPolicyCustomDeveloper]]
    Export:
      Name: StackSet-sso-customer-managed-policies-CustomDeveloperIamPolicyName
  CustomDeveloperLimitedIamPolicyName:
    Value: !Select [1, !Split ["/", !Ref rIamPolicyCustomDeveloperLimited]]
    Export:
      Name: StackSet-sso-customer-managed-policies-CustomDeveloperLimitedIamPolicyName
